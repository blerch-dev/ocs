apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
reclaimPolicy: Delete
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-pv
spec:
  storageClassName: local-storage
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/storage/data"
---
apiVersion: v1
kind: Service
metadata:
  name: ocs-state
spec:
  selector:
    app: ocs-state
  ports:
    - port: 80
      targetPort: 8083
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis-pod
  ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  redis-config: |
    maxmemory 20mb
    maxmemory-policy allkeys-lru
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocs-state
  labels:
    app: ocs-state
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ocs-state
  template:
    metadata:
      labels:
        app: ocs-state
    spec:
      containers:
      - name: ocs-state
        image: blerch-dev/ocs-state:latest
        ports:
          - containerPort: 8083
        # env:
        #   - name: DB_URL
        #     value: db-url.local
        imagePullPolicy: Never
        # resources:
        #   requests:
        #     memory: "64Mi"
        #     cpu: "250m"
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"
---
apiVersion: v1
kind: Pod
metadata:
  name: redis-pod
spec:
  containers:
  - name: redis
    image: redis:5.0.4
    command:
      - redis-server
      - "/redis-master/redis.conf"
    env:
    - name: MASTER
      value: "true"
    ports:
    - containerPort: 6379
    resources:
      limits:
        memory: "128Mi"
        cpu: "0.1"
    volumeMounts:
    - mountPath: /redis-master-data
      name: data
    - mountPath: /redis-master
      name: config
  volumes:
    - name: data
      emptyDir: {}
    - name: config
      configMap:
        name: redis-config
        items:
        - key: redis-config
          path: redis.conf